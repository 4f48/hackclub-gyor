---
import { DISCORD_CLIENT_ID, DISCORD_CLIENT_SECRET } from "astro:env/server";

const code = Astro.url.searchParams.get("code");
if (!code) return new Response("no oauth code provided", { status: 400 });

const payload = {
    client_id: DISCORD_CLIENT_ID,
    client_secret: DISCORD_CLIENT_SECRET,
    grant_type: "authorization_code",
    code,
    redirect_uri: "https://hackclubgyor.com/discord/callback",
};
const response = await fetch("https://discord.com/api/oauth2/token", {
    method: "post",
    headers: {
        "content-type": "application/x-www-form-urlencoded",
    },
    body: new URLSearchParams(payload).toString(),
});
const results: {
    access_token: string;
} = await response.json();
const access_token = results.access_token;

const user = await (
    await fetch("https://discord.com/api/users/@me", {
        headers: {
            authorization: `bearer ${access_token}`,
            "content-type": "application/x-www-form-urlencoded",
        },
    })
).json();
---

{JSON.stringify(user)}
